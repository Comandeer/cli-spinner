/*! @comandeer/cli-spinner v0.3.2 | (c) 2021 Comandeer | MIT license (see LICENSE) */
"use strict";var t=require("stream");function e(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var r=e(require("console-control-strings"));const s=["/","-","\\","|"];const i=Symbol("timeout"),n=Symbol("currentFrame"),o=Symbol("showing"),a=Symbol("isInteractive"),u=r.default.gotoSOL()+r.default.eraseLine();module.exports=class{constructor({stdout:e=process.stderr,label:r="",spinner:u=s,interval:h=80}={}){if(!((l=e)instanceof t.Writable||l instanceof t.Duplex))throw new TypeError("Custom stdout must be a valid writable/duplex stream");var l;if("number"!=typeof h)throw new TypeError("Custom interval must be a valid number");if("string"!=typeof r)throw new TypeError("Custom label must be a valid string");if(!function(t){return Array.isArray(t)&&t.every((t=>"string"==typeof t))}(u))throw new TypeError("Custom spinner must be a valid array of strings");this.stdout=e,this.label=r,this.spinner=u,this.interval=h,this[i]=null,this[n]=0,this[o]=!1,this[a]=function(t){const e="CI"in process.env,r="dumb"===process.env.TERM;return t.isTTY&&!e&&!r}(this.stdout)}async show(){if(!this[a]||this[o])return;const t=async()=>{const e=this._prepareSpinnerFrame();await this._requestRenderFrame(e),this[i]=setTimeout(t,this.interval)};return this[o]=!0,await this._requestRenderFrame(r.default.hideCursor()),t()}async hide(){this[o]&&(this[i]&&clearTimeout(this[i]),await this._requestRenderFrame(u+r.default.showCursor()),this[n]=0,this[o]=!1)}_prepareSpinnerFrame(){const t=this.spinner[this[n]++%this.spinner.length];return`${u+t} ${this.label}`}_requestRenderFrame(t){return new Promise((e=>{if(this.stdout.write(t,"utf8"))return e();this.stdout.once("drain",e)}))}};
//# sourceMappingURL=cli-spinner.cjs.map
