{"version":3,"file":"cli-spinner.cjs","sources":["../src/defaultSpinner.js","../src/Spinner.js","../src/isInteractive.js"],"sourcesContent":["const defaultSpinner = [\n\t'/',\n\t'-',\n\t'\\\\',\n\t'|'\n];\n\nexport default defaultSpinner;\n","import { Writable as WritableStream } from 'stream';\nimport { Duplex as DuplexStream } from 'stream';\nimport consoleControl from 'console-control-strings';\nimport defaultSpinner from './defaultSpinner.js';\nimport isInteractive from './isInteractive.js';\n\nconst timeoutSymbol = Symbol( 'timeout' );\nconst currentFrameSymbol = Symbol( 'currentFrame' );\nconst shownSymbol = Symbol( 'showing' );\nconst isInteractiveSymbol = Symbol( 'isInteractive' );\nconst eraseLineCmd = consoleControl.gotoSOL() + consoleControl.eraseLine();\n\nclass Spinner {\n\tconstructor( {\n\t\tstdout = process.stderr,\n\t\tlabel = '',\n\t\tspinner = defaultSpinner,\n\t\tinterval = 80\n\t} = {} ) {\n\t\tif ( !isValidStream( stdout ) ) {\n\t\t\tthrow new TypeError( 'Custom stdout must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tif ( typeof interval !== 'number' ) {\n\t\t\tthrow new TypeError( 'Custom interval must be a valid number' );\n\t\t}\n\n\t\tif ( typeof label !== 'string' ) {\n\t\t\tthrow new TypeError( 'Custom label must be a valid string' );\n\t\t}\n\n\t\tif ( !isArrayOfStrings( spinner ) ) {\n\t\t\tthrow new TypeError( 'Custom spinner must be a valid array of strings' );\n\t\t}\n\n\t\tthis.stdout = stdout;\n\t\tthis.label = label;\n\t\tthis.spinner = spinner;\n\t\tthis.interval = interval;\n\t\tthis[ timeoutSymbol ] = null;\n\t\tthis[ currentFrameSymbol ] = 0;\n\t\tthis[ shownSymbol ] = false;\n\t\tthis[ isInteractiveSymbol ] = isInteractive( this.stdout );\n\t}\n\n\tasync show() {\n\t\tif ( !this[ isInteractiveSymbol ] || this[ shownSymbol ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst drawSpinner = async () => {\n\t\t\tconst frame = this._prepareSpinnerFrame();\n\n\t\t\tawait this._requestRenderFrame( frame );\n\n\t\t\tthis[ timeoutSymbol ] = setTimeout( drawSpinner, this.interval );\n\t\t};\n\n\t\tthis[ shownSymbol ] = true;\n\n\t\tawait this._requestRenderFrame( consoleControl.hideCursor() );\n\n\t\treturn drawSpinner();\n\t}\n\n\tasync hide() {\n\t\tif ( !this[ shownSymbol ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( this[ timeoutSymbol ] ) {\n\t\t\tclearTimeout( this[ timeoutSymbol ] );\n\t\t}\n\n\t\tawait this._requestRenderFrame( eraseLineCmd + consoleControl.showCursor() );\n\n\t\tthis[ currentFrameSymbol ] = 0;\n\t\tthis[ shownSymbol ] = false;\n\t}\n\n\t_prepareSpinnerFrame() {\n\t\tconst currentFrame = this.spinner[ this[ currentFrameSymbol ]++ % this.spinner.length ];\n\n\t\treturn `${ eraseLineCmd + currentFrame } ${ this.label }`;\n\t}\n\n\t_requestRenderFrame( frame ) {\n\t\treturn new Promise( ( resolve ) => {\n\t\t\tif ( this.stdout.write( frame, 'utf8' ) ) {\n\t\t\t\treturn resolve();\n\t\t\t}\n\n\t\t\tthis.stdout.once( 'drain', resolve );\n\t\t} );\n\t}\n}\n\nfunction isValidStream( value ) {\n\treturn value instanceof WritableStream || value instanceof DuplexStream;\n}\n\nfunction isArrayOfStrings( value ) {\n\treturn Array.isArray( value ) && value.every( ( element ) => {\n\t\treturn typeof element === 'string';\n\t} );\n}\n\nexport default Spinner;\n","// Totally not inspired by https://github.com/sindresorhus/is-interactive\n// In fact I should be using Sindre's package, but as long as I'm stuck with CJS\n// it's not an option ðŸ˜¿\nfunction isInteractive( stream ) {\n\tconst isCI = 'CI' in process.env;\n\tconst isDumb = process.env.TERM === 'dumb';\n\tconst isTTY = stream.isTTY;\n\n\treturn isTTY && !isCI && !isDumb;\n}\n\nexport default isInteractive;\n"],"names":["defaultSpinner","timeoutSymbol","Symbol","currentFrameSymbol","shownSymbol","isInteractiveSymbol","eraseLineCmd","consoleControl","gotoSOL","eraseLine","constructor","stdout","process","stderr","label","spinner","interval","value","WritableStream","DuplexStream","TypeError","Array","isArray","every","element","isArrayOfStrings","stream","isCI","env","isDumb","TERM","isTTY","isInteractive","this","drawSpinner","async","frame","_prepareSpinnerFrame","_requestRenderFrame","setTimeout","hideCursor","clearTimeout","showCursor","currentFrame","length","Promise","resolve","write","once"],"mappings":";yJAAA,MAAMA,EAAiB,CACtB,IACA,IACA,KACA,KCED,MAAMC,EAAgBC,OAAQ,WACxBC,EAAqBD,OAAQ,gBAC7BE,EAAcF,OAAQ,WACtBG,EAAsBH,OAAQ,iBAC9BI,EAAeC,UAAeC,UAAYD,UAAeE,2BAE/D,MACCC,aAAaC,OACZA,EAASC,QAAQC,OADLC,MAEZA,EAAQ,GAFIC,QAGZA,EAAUf,EAHEgB,SAIZA,EAAW,IACR,UA+EmBC,EA9EDN,aA+EEO,YAAkBD,aAAiBE,gBA9EnD,IAAIC,UAAW,wDA6ExB,IAAwBH,KA1EG,iBAAbD,QACL,IAAII,UAAW,6CAGA,iBAAVN,QACL,IAAIM,UAAW,2CAyExB,SAA2BH,UACnBI,MAAMC,QAASL,IAAWA,EAAMM,OAASC,GACrB,iBAAZA,IAxERC,CAAkBV,SACjB,IAAIK,UAAW,wDAGjBT,OAASA,OACTG,MAAQA,OACRC,QAAUA,OACVC,SAAWA,OACVf,GAAkB,UAClBE,GAAuB,OACvBC,IAAgB,OAChBC,GCvCR,SAAwBqB,SACjBC,EAAO,OAAQf,QAAQgB,IACvBC,EAA8B,SAArBjB,QAAQgB,IAAIE,YACbJ,EAAOK,QAEJJ,IAASE,EDkCKG,CAAeC,KAAKtB,yBAI5CsB,KAAM5B,IAAyB4B,KAAM7B,gBAIrC8B,EAAcC,gBACbC,EAAQH,KAAKI,6BAEbJ,KAAKK,oBAAqBF,QAE1BnC,GAAkBsC,WAAYL,EAAaD,KAAKjB,uBAGjDZ,IAAgB,QAEhB6B,KAAKK,oBAAqB/B,UAAeiC,cAExCN,iBAIDD,KAAM7B,KAIP6B,KAAMhC,IACVwC,aAAcR,KAAMhC,UAGfgC,KAAKK,oBAAqBhC,EAAeC,UAAemC,mBAExDvC,GAAuB,OACvBC,IAAgB,GAGvBiC,6BACOM,EAAeV,KAAKlB,QAASkB,KAAM9B,KAAyB8B,KAAKlB,QAAQ6B,cAEvE,GAAGtC,EAAeqC,KAAkBV,KAAKnB,QAGlDwB,oBAAqBF,UACb,IAAIS,SAAWC,OAChBb,KAAKtB,OAAOoC,MAAOX,EAAO,eACvBU,SAGHnC,OAAOqC,KAAM,QAASF"}